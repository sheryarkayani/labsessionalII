name: Social Media MERN Stack CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand("ping")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        service: [server, client]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node Modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: ${{ matrix.service }}/node_modules
          key: ${{ runner.os }}-node-${{ matrix.service }}-${{ hashFiles(format('{0}/package-lock.json', matrix.service)) }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.service }}-

      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: npm install

      - name: Build Server
        if: matrix.service == 'server'
        working-directory: server
        run: |
          npm run build
          npm test

      - name: Build Client
        if: matrix.service == 'client'
        working-directory: client
        run: |
          npm run build
          npm test

      - name: Lint Server
        if: matrix.service == 'server'
        working-directory: server
        run: |
          if [ -f "package.json" ]; then
            npm run lint
          fi

      - name: Lint Client
        if: matrix.service == 'client'
        working-directory: client
        run: |
          if [ -f "package.json" ]; then
            npm run lint
          fi

  test:
    name: Integration Tests
    needs: build
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand("ping")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: server
        run: npm install

      - name: Run Integration Tests
        working-directory: server
        env:
          MONGO_DB: mongodb://localhost:27017/social-media-app
          PORT: 4000
        run: npm run test:integration