name: Cafe Management CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lint:
    name: Lint Services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api-gateway, menu-services, order-services, customer-services, inventory-services, payment-services]
      fail-fast: false
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Cache Node Modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: ${{ matrix.service }}/node_modules
          key: ${{ runner.os }}-node-${{ matrix.service }}-${{ hashFiles(format('{0}/package-lock.json', matrix.service)) }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.service }}-
      
      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        run: npm install
      
      - name: Check if lint script exists
        id: check_lint
        working-directory: ${{ matrix.service }}
        run: |
          if grep -q '"lint"' package.json; then
            echo "::set-output name=has_lint::true"
          else
            echo "::set-output name=has_lint::false"
          fi
      
      - name: Lint
        working-directory: ${{ matrix.service }}
        if: steps.check_lint.outputs.has_lint == 'true'
        run: npm run lint
      
      - name: Skip Lint
        if: steps.check_lint.outputs.has_lint != 'true'
        run: echo "No lint script configured for ${{ matrix.service }}, skipping."

  test:
    name: Test Services
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        service: [api-gateway, menu-services, order-services, customer-services, inventory-services, payment-services]
      fail-fast: false
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Cache Node Modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: ${{ matrix.service }}/node_modules
          key: ${{ runner.os }}-node-${{ matrix.service }}-${{ hashFiles(format('{0}/package-lock.json', matrix.service)) }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.service }}-
      
      - name: Install dependencies
        working-directory: ${{ matrix.service }}
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm install
      
      - name: Check if test script exists
        id: check_test
        working-directory: ${{ matrix.service }}
        run: |
          if grep -q '"test"' package.json && ! grep -q '"test": "echo \\"Error: no test specified\\" && exit 1"' package.json; then
            echo "::set-output name=has_test::true"
          else
            echo "::set-output name=has_test::false"
          fi
      
      - name: Run tests
        working-directory: ${{ matrix.service }}
        if: steps.check_test.outputs.has_test == 'true'
        run: npm test
      
      - name: Skip Tests
        if: steps.check_test.outputs.has_test != 'true'
        run: echo "No real test script configured for ${{ matrix.service }}, skipping."

  build:
    name: Build Services
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build API Gateway
        uses: docker/build-push-action@v4
        with:
          context: ./api-gateway
          push: false
          load: true
          tags: local/api-gateway:test
      
      - name: Build Menu Service
        uses: docker/build-push-action@v4
        with:
          context: ./menu-services
          push: false
          load: true
          tags: local/menu-service:test
      
      - name: Build Order Service
        uses: docker/build-push-action@v4
        with:
          context: ./order-services
          push: false
          load: true
          tags: local/order-service:test
      
      - name: Build Customer Service
        uses: docker/build-push-action@v4
        with:
          context: ./customer-services
          push: false
          load: true
          tags: local/customer-service:test
      
      - name: Build Inventory Service
        uses: docker/build-push-action@v4
        with:
          context: ./inventory-services
          push: false
          load: true
          tags: local/inventory-service:test
      
      - name: Build Payment Service
        uses: docker/build-push-action@v4
        with:
          context: ./payment-services
          push: false
          load: true
          tags: local/payment-service:test